# test_db.py

import asyncio
import os
from dotenv import load_dotenv
import beanie
import motor.motor_asyncio

# ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á import Model ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Beanie
from app.models.esg_question_model import ESGQuestion, PipelineRun
from app.models.clustering_model import Cluster


async def test_database_query():
    """
    ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ DB ‡πÅ‡∏•‡∏∞ Query ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å pipeline_runs ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    """
    print("--- Starting Database Test Script ---")

    # 1. ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
    load_dotenv()
    mongo_uri = os.getenv("MONGO_URL")
    mongo_db_name = os.getenv("MONGO_DB_NAME")

    if not mongo_uri or not mongo_db_name:
        print("!!! ERROR: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ MONGO_URL ‡πÅ‡∏•‡∏∞ MONGO_DB_NAME ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env")
        return

    print(f"Connecting to MongoDB database '{mongo_db_name}'...")

    # 2. ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Database ‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô Beanie Models
    try:
        client = motor.motor_asyncio.AsyncIOMotorClient(mongo_uri)
        database = client[mongo_db_name]
        await beanie.init_beanie(database=database, document_models=[ESGQuestion, Cluster, PipelineRun])
        print("Beanie initialized successfully.")
    except Exception as e:
        print(f"!!! ERROR during Beanie initialization: {e}")
        return

    # 3. ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Query ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    print("\n--- Performing the query to find the latest run ---")
    print("Running: PipelineRun.find_all(sort=[('run_timestamp', -1)]).limit(1).first_or_none()")
    
    try:
        latest_run = await PipelineRun.find_all(
            sort=[("run_timestamp", -1)]
        ).limit(1).first_or_none()

        # 4. ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ
        print("\n--- Query Result ---")
        if latest_run:
            print("‚úÖ SUCCESS: Found a document!")
            print(f"   Document ID: {latest_run.id}")
            print(f"   Timestamp: {latest_run.run_timestamp}")
            print(f"   Verification Status: {latest_run.verification_summary.get('status')}")
        else:
            print("‚ùå FAILED: Query returned None. No document was found.")

    except Exception as e:
        print(f"üí• An exception occurred during the query: {e}")

    print("\n--- Database Test Script Finished ---")


if __name__ == "__main__":
    asyncio.run(test_database_query())